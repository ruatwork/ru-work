       #!/bin/python3
       
       # Writes new line to table anyways. Needs to only write if the value of present differs.
       
       # currently running this program prints checklist items one by one with their respective placement in the list
       
       #WHAT WILL THIS DO:
       
       # compare checklist MAC addresses to the currently connected present.txt, then send data to database accordingly
       
       
    1: import mysql.connector
    1: from mysql.connector import Error
       
    1: lastrow = (len(list(open("checklist.txt")))) #get the number of rows in checklist.txt
    1: currentrow = 0 #start from first row
       
    1: with open("checklist.txt", "r") as checktext: # make checklist.txt into list
    7:         checklist = [item.strip()
    6:                 for item in checktext]
       
    1: with open("present.txt", "r") as presenttext:
    5:         presentlist = [item.strip()
    4:                 for item in presenttext]
       
       
    1: conn = mysql.connector.connect(host='localhost',
    1: database='worktime',
    1: user='admin',
    1: password='your_password@Hom3')
       
       # the following will be using the list made from checklist.txt. list name is checklist. there are no real "rows",
       # but the variable currentrow is used to go through the list items one by one.
       
    6: while (currentrow <= lastrow -1): #while we're not past the last row
       
    5:         try:
    5:                 sql_read = "SELECT present FROM " + checklist[currentrow] + " ORDER BY id DESC LIMIT 1"
    5:                 cursor = conn.cursor(buffered=True)
    5:                 cursor.execute(sql_read)
    5:                 record = cursor.fetchone()
       
               except Error as e :
                       print ("Error while connecting to MySQL", e)
       
   17:         if any(map(lambda each: each in checklist[currentrow], presentlist)) and (record is 0,):
    3:                 print (currentrow)
    3:                 print (checklist[currentrow]) #print the item from the list that is in the current position (0,1,2,3,4)
    3:                 print ("present")
       
    3:                 sql_present = "INSERT INTO " + checklist[currentrow] + " (present) VALUES (1)"
       
    3:                 try:
    3:                         cursor.execute(sql_present)
                       except Error as e :
                               print("Error: {}".format(error))
    3:                 conn.commit()
       
    3:                 currentrow += 1 #proceed to next row
    3:                 continue
       
    8:         elif any(map(lambda each: each in checklist[currentrow], presentlist)) and (record is 1,):
                       pass
       
    4:         elif any(map(lambda each: each not in checklist[currentrow], presentlist)) and (record is 1,):
    2:                 print (currentrow)
    2:                 print (checklist[currentrow])
    2:                 print ("absent")
       
    2:                 sql_absent = "INSERT INTO " + checklist[currentrow] + " (present) VALUES (0)"
       
    2:                 try:
    2:                         cursor.execute(sql_absent)
                       except Error as e :
                               print("Error:{}".format(error))
    2:                 conn.commit()
       
    2:                 currentrow += 1
    2:                 continue
       
               elif any(map(lambda each: each not in checklist[currentrow], presentlist)) and (record is 0,):
                       currentrow += 1
                       continue
       
               else:
                       print("ERROR!! I am the brake :D")
                       cursor.close()
                       conn.close()
                       break
       
    1: cursor.close()
    1: conn.close()
       
       # while we're not past the last row:
               # check if currentrow's item is in present.txt
                       # if it is, and the last entry in the database is not "present"
                               # write to the database that the MAC is present. MAC, present, datetime
                               # move to next currentrow
       
               # else if however currentrow's item is NOT in present.txt
                       # and database's last entry is not "absent"
                               # write to the database that the MAC is absent. MAC, absent, datetime
                               # move to next currentrow
